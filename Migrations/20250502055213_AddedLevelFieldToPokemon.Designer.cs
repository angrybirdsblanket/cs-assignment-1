// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonPocket.Data;

#nullable disable

namespace PokemonPocket.Migrations
{
    [DbContext(typeof(PokemonPocketContext))]
    [Migration("20250502055213_AddedLevelFieldToPokemon")]
    partial class AddedLevelFieldToPokemon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("PokemonPocket.Models.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("PokemonPocket.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gold")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PokemonPocket.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PokemonType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Skill")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillDamage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pokemon", (string)null);

                    b.HasDiscriminator<int>("PokemonType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PokemonPocket.Models.PokemonMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EvolveTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoToEvolve")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EvolutionRules", (string)null);
                });

            modelBuilder.Entity("PokemonPocket.Models.Charmander", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("PokemonPocket.Models.Charmeleon", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("PokemonPocket.Models.Eevee", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("PokemonPocket.Models.Flareon", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("PokemonPocket.Models.Pikachu", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("PokemonPocket.Models.Raichu", b =>
                {
                    b.HasBaseType("PokemonPocket.Models.Pokemon");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("PokemonPocket.Models.Badge", b =>
                {
                    b.HasOne("PokemonPocket.Models.Player", "Player")
                        .WithMany("Badges")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("PokemonPocket.Models.Player", b =>
                {
                    b.Navigation("Badges");
                });
#pragma warning restore 612, 618
        }
    }
}
